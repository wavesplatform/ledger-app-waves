/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.3 at Wed Apr 15 13:47:10 2020. */

#ifndef PB_WAVES_AMOUNT_PB_H_INCLUDED
#define PB_WAVES_AMOUNT_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _waves_Amount {
    pb_callback_t asset_id;
    int64_t amount;
/* @@protoc_insertion_point(struct:waves_Amount) */
} waves_Amount;

/* Default values for struct fields */

/* Initializer values for message structs */
#define waves_Amount_init_default                {{{NULL}, NULL}, 0}
#define waves_Amount_init_zero                   {{{NULL}, NULL}, 0}

/* Field tags (for use in manual encoding/decoding) */
#define waves_Amount_asset_id_tag                1
#define waves_Amount_amount_tag                  2

/* Struct field encoding specification for nanopb */
extern const pb_field_t waves_Amount_fields[3];

/* Maximum encoded size of messages (where known) */
/* waves_Amount_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define AMOUNT_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
